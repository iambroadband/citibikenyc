name: CI
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "main"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Echo intro message
        run: echo "Building packages, so that you don't have to!"
      #################################################################
      #### USE THIS IF YOU HAVE REQUIREMENTS TO INSTALL ###############
      - name: Build project
        run: |
          pwd
          # For every function in this repo
          for func in function1 function2 function3 ; do
            cd ${func}
            if [[ -f "requirements.txt" ]]; then
              pip install --target . -r requirements.txt
            fi
            zip -r ../${func}.zip .
            cd ..
          done
        #################################################################
        #### USE THIS IF YOU JUST NEED TO PUT FILES IN A ZIP ARCHIVE ####
        # Create a separate step for every function in the repo
      - name: Zip Release Hourly Report
        uses: TheDoctor0/zip-release@0.4.1
        with:
          # Filename for archive
          filename: ../hourly_report_function.zip
          # Working directory before zipping
          directory: hourly_report

      - name: Zip Release Function2
        uses: TheDoctor0/zip-release@0.4.1
        with:
          # Filename for archive
          filename: ../daily_report_function.zip
          # Working directory before zipping
          directory: daily_report
      #################################################################
      # Create a separate upload step for every ZIP archive you created earlier
      - name: Upload Hourly Report ZIP
        id: upload-hourly-report-function-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./hourly_report_function.zip
          asset_name: hourly_report_function.zip
          asset_content_type: application/zip

      - name: Upload Daily Report ZIP
        id: upload-daily-report-function-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./daily_report_function.zip
          asset_name: daily_report_function.zip
          asset_content_type: application/zip
